//LVDC Memory Module
//Module to simulate a single memory module within the LVDC

const int dataPin[14] = {4,5,6,7,8,9,10,11,12,13,14,15,16,17};
const int sectorSelectPin[4] = {36,37,38,39};

const Lo_Y[4] = {22,23,24};
const Hi_Y[4] = {25,26,27};
const Lo_X[3] = {28,29,30,31};
const Hi_X[3] = {32,33,34,35};

const int MemoryModuleSelect = 0;
const int SyllableSelect = 1;
const int FRAM_A1 = 2;
const int FRAM_A2 = 3;
const int store_read = 18;

byte sector[16];
const byte location_empty[256][2] = {
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000},
{0b00000000000000,0b00000000000000}
};

int syllable;
int sector = 0;



void setup() {
  initialize_memory(); //Initializes the memory
  
  //Sets the sector select pins as inputs
  for(int i=0; i < 16; i++){
    pinMode(sectorSelectPin[i],INPUT);
  }
}

void loop() {
  //Updates memory location
  //Determine selected data locations
  if (digitalRead(store_read) == HIGH){
    syllable = 1;
  }else{
    syllable = 0;
  }

  //Determines sector
  for(int i=0; i < 4; i++){
    bool readVal;
    if(digitalRead(Lo_Y[i]) == HIGH){
      readVal = 1;
    }else{
      readVal = 0;
    }
    sector += (readVal * pow(2,i));
  }

  determine_XY_coordinates();
  
  //Functions only when the module is selected
  if (digitalRead(MemoryModuleSelect) == HIGH){
    if (digitalRead(store_read) == HIGH){         //Determines reading or writing, 0 = read, 1 = store
      readData();
    }else{
      storeData();
    }
  }
}





void find_XY_coodrinates(){
  //Finds the y coordinate
  int Lo_Y_coord = 0;
  for(int i=0; i < 3; i++){
    if(digitalRead(Lo_Y[i]) == HIGH){
      Lo_Y_coord += pow(2,i);
    }
  }
  int Hi_Y_coord = 0;
  for(int i=0; i < 3; i++){
    if(digitalRead(Lo_Y[i]) == HIGH){
      Hi_Y_coord += pow(2,i);
    }
  }

  //Findss the x coordinate
  int Lo_X_coord = 0;
  for(int i=0; i < 4; i++){
    if(digitalRead(Lo_Y[i]) == HIGH){
      Lo_X_coord += pow(2,i);
    }
  }
  int Hi_X_coord = 0;
  for(int i=0; i < 4; i++){
    if(digitalRead(Lo_Y[i]) == HIGH){
      Hi_X_coord += pow(2,i);
    }
  }
}

void storeData(int sec, int loc, int syl){
  for(int i=0; i < 14; i++){
    if(digitalRead(dataPin[i]) == HIGH){
      bitWrite(sec[loc][syl],i,1);
    }else{
      bitWrite(sec[loc][syl],i,0);
    }
  }
}

void readData(int sec, int loc, int syl){
  byte d = bitRead(sec[loc][syl]);
  for(int i=0; i < 14; i++){
    if(bitRead(d,i); == 1){
      digitalWrite(dataPin[i] == HIGH);
    }else{
      digitalWrite(dataPin[i] == LOW);
    }
  }
}

void printData(int sec, int loc, int syl){
  Serial.print(sector[sec][loc][syl]);
}

void address_sweep(){
  for(int i=0; i < 16; i++){
    Serial.println("Sector " + String(i+1) + ":");
    for(int ii=0; ii < 256; ii++){
      //Serial.print(sector[i][ii][0],BIN); Serial.print("     "); Serial.print(sector[i][ii][1],BIN);
    }
  }
}

void initialize_memory(){
  for(int i=0; i < 16; i++){
    sector[i] = location_empty;
  }
}
